# Frontend Dockerfile - Multi-stage build with Node.js 22 Alpine
FROM node:22-alpine AS base

# Install pnpm
RUN corepack enable pnpm

# Set working directory
WORKDIR /app

# Copy workspace configuration files
COPY package.json pnpm-lock.yaml pnpm-workspace.yaml ./
COPY turbo.json ./
COPY tsconfig.json ./

# Copy package.json files for all workspaces
COPY apps/web/package.json ./apps/web/
COPY packages/schemas/package.json ./packages/schemas/
COPY packages/typescript-config/package.json ./packages/typescript-config/

# Install dependencies
RUN pnpm install --frozen-lockfile --ignore-scripts

# Build stage
FROM base AS builder

# Copy source code
COPY packages/schemas ./packages/schemas
COPY packages/typescript-config ./packages/typescript-config
COPY apps/web ./apps/web

# Build the schemas package first
RUN pnpm --filter @repo/schemas build

# Build the web application
RUN pnpm --filter web build

# Production stage
FROM node:22-alpine AS runner

# Install pnpm
RUN corepack enable pnpm

WORKDIR /app

# Create non-root user
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

# Copy package.json files and install production dependencies
COPY --from=builder /app/package.json ./
COPY --from=builder /app/pnpm-lock.yaml ./
COPY --from=builder /app/pnpm-workspace.yaml ./
COPY --from=builder /app/apps/web/package.json ./apps/web/
COPY --from=builder /app/packages/schemas/package.json ./packages/schemas/

# Copy built schemas package
COPY --from=builder --chown=nextjs:nodejs /app/packages/schemas/dist ./packages/schemas/dist

# Copy built Next.js application
COPY --from=builder --chown=nextjs:nodejs /app/apps/web/.next/standalone ./
COPY --from=builder --chown=nextjs:nodejs /app/apps/web/.next/static ./apps/web/.next/static
COPY --from=builder --chown=nextjs:nodejs /app/apps/web/public ./apps/web/public

# Copy environment file (controlled by build arg)
ARG ENV_FILE=.env.prod
COPY apps/web/${ENV_FILE} ./.env

USER nextjs

EXPOSE 3000

ENV PORT=3000
ENV HOSTNAME=0.0.0.0

CMD ["node", "apps/web/server.js"]